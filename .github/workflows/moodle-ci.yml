name: Moodle Plugin CI

on: [push, pull_request]

jobs:
  static:
    runs-on: ubuntu-latest
    name: static on (${{ matrix.moodle-branch }}/${{ matrix.php }}/${{ matrix.database }})

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: 'postgres'
          POSTGRES_HOST_AUTH_METHOD: 'trust'
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 3

    strategy:
      fail-fast: false
      matrix:
        php: ['8.3']
        moodle-branch: ['MOODLE_405_STABLE']
        database: [pgsql]

    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          path: plugin

      - name: Setup PHP ${{ matrix.php }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          # extensions: ${{ matrix.extensions }}
          ini-values: max_input_vars=5000
          coverage: none

      - name: npm cache
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: node-${{ matrix.php }}-${{ matrix.moodle-branch }}-${{ matrix.database }}-cache
          restore-keys: |
            node-${{ matrix.php }}-${{ matrix.moodle-branch }}-${{ matrix.database }}-cache

      - name: Initialise moodle-plugin-ci
        run: composer create-project -n --no-dev --prefer-dist moodlehq/moodle-plugin-ci ci ^4

      - name: Export moodle-plugin-ci pathes
        run: |
          echo $(cd ci/bin; pwd) >> $GITHUB_PATH
          echo $(cd ci/vendor/bin; pwd) >> $GITHUB_PATH
          sudo locale-gen en_AU.UTF-8
          echo "NVM_DIR=$HOME/.nvm" >> $GITHUB_ENV

      - name: Install moodle-plugin-ci
        run: |
          moodle-plugin-ci add-plugin --branch main Opencast-Moodle/moodle-tool_opencast
          moodle-plugin-ci add-plugin --branch main Opencast-Moodle/moodle-block_opencast
          moodle-plugin-ci install --plugin ./plugin --db-host=127.0.0.1
        env:
          DB: ${{ matrix.database }}
          MOODLE_BRANCH: ${{ matrix.moodle-branch }}

      - name: PHP Lint
        if: ${{ always() }}
        run: moodle-plugin-ci phplint

      - name: PHP Copy/Paste Detector
        continue-on-error: true # This step will show errors but will not fail
        if: ${{ always() }}
        run: moodle-plugin-ci phpcpd

      - name: PHP Mess Detector
        continue-on-error: true # This step will show errors but will not fail
        if: ${{ always() }}
        run: moodle-plugin-ci phpmd

      - name: Moodle Code Checker
        if: ${{ always() }}
        run: moodle-plugin-ci phpcs --max-warnings 0

      - name: Moodle PHPDoc Checker
        if: ${{ always() }}
        run: moodle-plugin-ci phpdoc

      - name: Validating
        if: ${{ always() }}
        run: moodle-plugin-ci validate

      - name: Check upgrade savepoints
        if: ${{ always() }}
        run: moodle-plugin-ci savepoints

      - name: Mustache Lint
        if: ${{ always() }}
        run: moodle-plugin-ci mustache

      - name: Grunt
        if: ${{ always() }}
        run: moodle-plugin-ci grunt --max-lint-warnings 0

  tests:
    runs-on: ubuntu-latest
    needs: static
    name: test (${{ matrix.moodle-branch }}/${{ matrix.php }}/${{ matrix.database }})
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: 'postgres'
          POSTGRES_HOST_AUTH_METHOD: 'trust'
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 3
      mariadb:
        image: mariadb:10
        env:
          MYSQL_USER: 'root'
          MYSQL_ALLOW_EMPTY_PASSWORD: "true"
          MYSQL_CHARACTER_SET_SERVER: "utf8mb4"
          MYSQL_COLLATION_SERVER: "utf8mb4_unicode_ci"

        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval 10s --health-timeout 5s --health-retries 3
    strategy:
      fail-fast: false
      matrix:
        php: ['8.3']
        moodle-branch: ['MOODLE_404_STABLE', 'MOODLE_405_STABLE']
        database: ['mariadb', 'pgsql']

    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          path: plugin

      - name: Setup PHP ${{ matrix.php }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          ini-values: max_input_vars=5000
          coverage: none

      - name: Initialise moodle-plugin-ci
        run: composer create-project -n --no-dev --prefer-dist moodlehq/moodle-plugin-ci ci ^4

      - name: Export moodle-plugin-ci pathes
        run: |
          echo $(cd ci/bin; pwd) >> $GITHUB_PATH
          echo $(cd ci/vendor/bin; pwd) >> $GITHUB_PATH
          sudo locale-gen en_AU.UTF-8
          echo "NVM_DIR=$HOME/.nvm" >> $GITHUB_ENV

      - name: Install moodle-plugin-ci
        run: |
          moodle-plugin-ci add-plugin --branch main Opencast-Moodle/moodle-tool_opencast
          moodle-plugin-ci add-plugin --branch main Opencast-Moodle/moodle-block_opencast
          moodle-plugin-ci add-plugin --branch 1.27.2 h5p/moodle-mod_hvp
          cd moodle-plugin-ci-plugins/moodle-mod_hvp && git submodule update --init && cd ../..
          moodle-plugin-ci install --plugin ./plugin --db-host=127.0.0.1
          moodle-plugin-ci add-config '$CFG->bahat_increasetimeout = 2;'
        env:
          DB: ${{ matrix.database }}
          MOODLE_BRANCH: ${{ matrix.moodle-branch }}

      - name: Behat features
        if: ${{ always() }}
        run: moodle-plugin-ci behat --auto-rerun 0
